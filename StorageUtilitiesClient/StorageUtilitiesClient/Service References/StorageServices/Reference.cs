//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StorageUtilitiesClient.StorageServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallContext", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class CallContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartitionKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartitionKey {
            get {
                return this.PartitionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionKeyField, value) != true)) {
                    this.PartitionKeyField = value;
                    this.RaisePropertyChanged("PartitionKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Infolog", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class Infolog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StorageUtilitiesClient.StorageServices.InfologEntry[] EntriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StorageUtilitiesClient.StorageServices.InfologEntry[] Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntriesField, value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologEntry", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class InfologEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StorageUtilitiesClient.StorageServices.InfologType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StorageUtilitiesClient.StorageServices.InfologType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologType", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    public enum InfologType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class Fault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RequestIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeField, value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProxyBase", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.KernelInterop")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StorageUtilitiesClient.StorageServices.XppObjectBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StorageUtilitiesClient.StorageServices.AXFileInfo))]
    public partial class ProxyBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XppObjectBase", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StorageUtilitiesClient.StorageServices.AXFileInfo))]
    public partial class XppObjectBase : StorageUtilitiesClient.StorageServices.ProxyBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AXFileInfo", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class AXFileInfo : StorageUtilitiesClient.StorageServices.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerName {
            get {
                return this.ContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerNameField, value) != true)) {
                    this.ContainerNameField = value;
                    this.RaisePropertyChanged("ContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileContent {
            get {
                return this.FileContentField;
            }
            set {
                if ((object.ReferenceEquals(this.FileContentField, value) != true)) {
                    this.FileContentField = value;
                    this.RaisePropertyChanged("FileContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org", ConfigurationName="StorageServices.StorageServices")]
    public interface StorageServices {
        
        // CODEGEN: Generating message contract since message DownloadFile has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StorageServices/DownloadFile", ReplyAction="http://tempuri.org/StorageServices/DownloadFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(StorageUtilitiesClient.StorageServices.Fault), Action="http://tempuri.org/StorageServices/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        StorageUtilitiesClient.StorageServices.DownloadFileResponse DownloadFile(StorageUtilitiesClient.StorageServices.DownloadFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StorageServices/DownloadFile", ReplyAction="http://tempuri.org/StorageServices/DownloadFileResponse")]
        System.Threading.Tasks.Task<StorageUtilitiesClient.StorageServices.DownloadFileResponse> DownloadFileAsync(StorageUtilitiesClient.StorageServices.DownloadFile request);
        
        // CODEGEN: Generating message contract since message DequeueFile has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StorageServices/DequeueFile", ReplyAction="http://tempuri.org/StorageServices/DequeueFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(StorageUtilitiesClient.StorageServices.Fault), Action="http://tempuri.org/StorageServices/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        StorageUtilitiesClient.StorageServices.DequeueFileResponse DequeueFile(StorageUtilitiesClient.StorageServices.DequeueFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StorageServices/DequeueFile", ReplyAction="http://tempuri.org/StorageServices/DequeueFileResponse")]
        System.Threading.Tasks.Task<StorageUtilitiesClient.StorageServices.DequeueFileResponse> DequeueFileAsync(StorageUtilitiesClient.StorageServices.DequeueFile request);
        
        // CODEGEN: Generating message contract since message Ack has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StorageServices/Ack", ReplyAction="http://tempuri.org/StorageServices/AckResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(StorageUtilitiesClient.StorageServices.Fault), Action="http://tempuri.org/StorageServices/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        StorageUtilitiesClient.StorageServices.AckResponse Ack(StorageUtilitiesClient.StorageServices.Ack request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StorageServices/Ack", ReplyAction="http://tempuri.org/StorageServices/AckResponse")]
        System.Threading.Tasks.Task<StorageUtilitiesClient.StorageServices.AckResponse> AckAsync(StorageUtilitiesClient.StorageServices.Ack request);
        
        // CODEGEN: Generating message contract since message GetQueueSize has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StorageServices/GetQueueSize", ReplyAction="http://tempuri.org/StorageServices/GetQueueSizeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(StorageUtilitiesClient.StorageServices.Fault), Action="http://tempuri.org/StorageServices/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        StorageUtilitiesClient.StorageServices.GetQueueSizeResponse GetQueueSize(StorageUtilitiesClient.StorageServices.GetQueueSize request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StorageServices/GetQueueSize", ReplyAction="http://tempuri.org/StorageServices/GetQueueSizeResponse")]
        System.Threading.Tasks.Task<StorageUtilitiesClient.StorageServices.GetQueueSizeResponse> GetQueueSizeAsync(StorageUtilitiesClient.StorageServices.GetQueueSize request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFile", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class DownloadFile {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public StorageUtilitiesClient.StorageServices.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string ContainerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string fileId;
        
        public DownloadFile() {
        }
        
        public DownloadFile(StorageUtilitiesClient.StorageServices.CallContext CallContext, string ContainerName, string fileId) {
            this.CallContext = CallContext;
            this.ContainerName = ContainerName;
            this.fileId = fileId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class DownloadFileResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public StorageUtilitiesClient.StorageServices.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string result;
        
        public DownloadFileResponse() {
        }
        
        public DownloadFileResponse(StorageUtilitiesClient.StorageServices.Infolog Infolog, string result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DequeueFile", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class DequeueFile {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public StorageUtilitiesClient.StorageServices.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string containerName;
        
        public DequeueFile() {
        }
        
        public DequeueFile(StorageUtilitiesClient.StorageServices.CallContext CallContext, string containerName) {
            this.CallContext = CallContext;
            this.containerName = containerName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DequeueFileResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class DequeueFileResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public StorageUtilitiesClient.StorageServices.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public StorageUtilitiesClient.StorageServices.AXFileInfo result;
        
        public DequeueFileResponse() {
        }
        
        public DequeueFileResponse(StorageUtilitiesClient.StorageServices.Infolog Infolog, StorageUtilitiesClient.StorageServices.AXFileInfo result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Ack", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class Ack {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public StorageUtilitiesClient.StorageServices.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string containerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public System.Guid id;
        
        public Ack() {
        }
        
        public Ack(StorageUtilitiesClient.StorageServices.CallContext CallContext, string containerName, System.Guid id) {
            this.CallContext = CallContext;
            this.containerName = containerName;
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AckResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class AckResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public StorageUtilitiesClient.StorageServices.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public bool result;
        
        public AckResponse() {
        }
        
        public AckResponse(StorageUtilitiesClient.StorageServices.Infolog Infolog, bool result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQueueSize", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetQueueSize {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public StorageUtilitiesClient.StorageServices.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string containerName;
        
        public GetQueueSize() {
        }
        
        public GetQueueSize(StorageUtilitiesClient.StorageServices.CallContext CallContext, string containerName) {
            this.CallContext = CallContext;
            this.containerName = containerName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQueueSizeResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetQueueSizeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public StorageUtilitiesClient.StorageServices.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public int result;
        
        public GetQueueSizeResponse() {
        }
        
        public GetQueueSizeResponse(StorageUtilitiesClient.StorageServices.Infolog Infolog, int result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface StorageServicesChannel : StorageUtilitiesClient.StorageServices.StorageServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StorageServicesClient : System.ServiceModel.ClientBase<StorageUtilitiesClient.StorageServices.StorageServices>, StorageUtilitiesClient.StorageServices.StorageServices {
        
        public StorageServicesClient() {
        }
        
        public StorageServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StorageServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StorageServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StorageServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        StorageUtilitiesClient.StorageServices.DownloadFileResponse StorageUtilitiesClient.StorageServices.StorageServices.DownloadFile(StorageUtilitiesClient.StorageServices.DownloadFile request) {
            return base.Channel.DownloadFile(request);
        }
        
        public StorageUtilitiesClient.StorageServices.Infolog DownloadFile(StorageUtilitiesClient.StorageServices.CallContext CallContext, string ContainerName, string fileId, out string result) {
            StorageUtilitiesClient.StorageServices.DownloadFile inValue = new StorageUtilitiesClient.StorageServices.DownloadFile();
            inValue.CallContext = CallContext;
            inValue.ContainerName = ContainerName;
            inValue.fileId = fileId;
            StorageUtilitiesClient.StorageServices.DownloadFileResponse retVal = ((StorageUtilitiesClient.StorageServices.StorageServices)(this)).DownloadFile(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<StorageUtilitiesClient.StorageServices.DownloadFileResponse> StorageUtilitiesClient.StorageServices.StorageServices.DownloadFileAsync(StorageUtilitiesClient.StorageServices.DownloadFile request) {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<StorageUtilitiesClient.StorageServices.DownloadFileResponse> DownloadFileAsync(StorageUtilitiesClient.StorageServices.CallContext CallContext, string ContainerName, string fileId) {
            StorageUtilitiesClient.StorageServices.DownloadFile inValue = new StorageUtilitiesClient.StorageServices.DownloadFile();
            inValue.CallContext = CallContext;
            inValue.ContainerName = ContainerName;
            inValue.fileId = fileId;
            return ((StorageUtilitiesClient.StorageServices.StorageServices)(this)).DownloadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        StorageUtilitiesClient.StorageServices.DequeueFileResponse StorageUtilitiesClient.StorageServices.StorageServices.DequeueFile(StorageUtilitiesClient.StorageServices.DequeueFile request) {
            return base.Channel.DequeueFile(request);
        }
        
        public StorageUtilitiesClient.StorageServices.Infolog DequeueFile(StorageUtilitiesClient.StorageServices.CallContext CallContext, string containerName, out StorageUtilitiesClient.StorageServices.AXFileInfo result) {
            StorageUtilitiesClient.StorageServices.DequeueFile inValue = new StorageUtilitiesClient.StorageServices.DequeueFile();
            inValue.CallContext = CallContext;
            inValue.containerName = containerName;
            StorageUtilitiesClient.StorageServices.DequeueFileResponse retVal = ((StorageUtilitiesClient.StorageServices.StorageServices)(this)).DequeueFile(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<StorageUtilitiesClient.StorageServices.DequeueFileResponse> StorageUtilitiesClient.StorageServices.StorageServices.DequeueFileAsync(StorageUtilitiesClient.StorageServices.DequeueFile request) {
            return base.Channel.DequeueFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<StorageUtilitiesClient.StorageServices.DequeueFileResponse> DequeueFileAsync(StorageUtilitiesClient.StorageServices.CallContext CallContext, string containerName) {
            StorageUtilitiesClient.StorageServices.DequeueFile inValue = new StorageUtilitiesClient.StorageServices.DequeueFile();
            inValue.CallContext = CallContext;
            inValue.containerName = containerName;
            return ((StorageUtilitiesClient.StorageServices.StorageServices)(this)).DequeueFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        StorageUtilitiesClient.StorageServices.AckResponse StorageUtilitiesClient.StorageServices.StorageServices.Ack(StorageUtilitiesClient.StorageServices.Ack request) {
            return base.Channel.Ack(request);
        }
        
        public StorageUtilitiesClient.StorageServices.Infolog Ack(StorageUtilitiesClient.StorageServices.CallContext CallContext, string containerName, System.Guid id, out bool result) {
            StorageUtilitiesClient.StorageServices.Ack inValue = new StorageUtilitiesClient.StorageServices.Ack();
            inValue.CallContext = CallContext;
            inValue.containerName = containerName;
            inValue.id = id;
            StorageUtilitiesClient.StorageServices.AckResponse retVal = ((StorageUtilitiesClient.StorageServices.StorageServices)(this)).Ack(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<StorageUtilitiesClient.StorageServices.AckResponse> StorageUtilitiesClient.StorageServices.StorageServices.AckAsync(StorageUtilitiesClient.StorageServices.Ack request) {
            return base.Channel.AckAsync(request);
        }
        
        public System.Threading.Tasks.Task<StorageUtilitiesClient.StorageServices.AckResponse> AckAsync(StorageUtilitiesClient.StorageServices.CallContext CallContext, string containerName, System.Guid id) {
            StorageUtilitiesClient.StorageServices.Ack inValue = new StorageUtilitiesClient.StorageServices.Ack();
            inValue.CallContext = CallContext;
            inValue.containerName = containerName;
            inValue.id = id;
            return ((StorageUtilitiesClient.StorageServices.StorageServices)(this)).AckAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        StorageUtilitiesClient.StorageServices.GetQueueSizeResponse StorageUtilitiesClient.StorageServices.StorageServices.GetQueueSize(StorageUtilitiesClient.StorageServices.GetQueueSize request) {
            return base.Channel.GetQueueSize(request);
        }
        
        public StorageUtilitiesClient.StorageServices.Infolog GetQueueSize(StorageUtilitiesClient.StorageServices.CallContext CallContext, string containerName, out int result) {
            StorageUtilitiesClient.StorageServices.GetQueueSize inValue = new StorageUtilitiesClient.StorageServices.GetQueueSize();
            inValue.CallContext = CallContext;
            inValue.containerName = containerName;
            StorageUtilitiesClient.StorageServices.GetQueueSizeResponse retVal = ((StorageUtilitiesClient.StorageServices.StorageServices)(this)).GetQueueSize(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<StorageUtilitiesClient.StorageServices.GetQueueSizeResponse> StorageUtilitiesClient.StorageServices.StorageServices.GetQueueSizeAsync(StorageUtilitiesClient.StorageServices.GetQueueSize request) {
            return base.Channel.GetQueueSizeAsync(request);
        }
        
        public System.Threading.Tasks.Task<StorageUtilitiesClient.StorageServices.GetQueueSizeResponse> GetQueueSizeAsync(StorageUtilitiesClient.StorageServices.CallContext CallContext, string containerName) {
            StorageUtilitiesClient.StorageServices.GetQueueSize inValue = new StorageUtilitiesClient.StorageServices.GetQueueSize();
            inValue.CallContext = CallContext;
            inValue.containerName = containerName;
            return ((StorageUtilitiesClient.StorageServices.StorageServices)(this)).GetQueueSizeAsync(inValue);
        }
    }
}
